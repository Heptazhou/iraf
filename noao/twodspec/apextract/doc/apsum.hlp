.help apsum Jan88 noao.twodspec.apextract
.ih
NAME
apsum -- Extract one dimensional sums across the apertures
.ih
USAGE
apsum input
.ih
PARAMETERS
.ls input
List of input images.  The list may be a combination of
comma delimited image names, image templates, or "@" files.  The
dispersion axis must be defined in the image headers using \fBsetdisp\fR
or \fBhedit\fR.
.le
.ls output = ""
List of output root names for the extracted spectra.  If the null
string is given or the end of the output list is reached before the end
of the input list then the input image name is used as the output root name.
This will not conflict with the input image since an aperture number
extension is added for onedspec format or the extension ".ech" for
echelle format.
.le
.ls references = ""
List of reference images to be used to define apertures for the input
images.  When a reference image is given it supercedes apertures
previously defined for the input image. The list may be null, "", or
any number of images less than or equal to the list of input images.
The special image "last" may be used to specify the last set of
apertures written to the database.
.le
.ls sky = ""
List of sky spectra root names.  If the null string is given or the
end of the list is reached before the end of the input list then the
input image name is used with "sky" appended.  As with the output
spectra an aperture number or ".ech" extension is also added.  The sky spectra
are only produced if \fIskyextract\fR = yes and one of the \fIbackground\fR
options ("average" or "fit") is selected.
".
.le
.ls profiles = ""
List of profile reference images (optionally) used when fitting
profiles for cleaning (\fIclean=yes\fR) or for variance weighting
(\fIweights=variance\fR).  If no profile image is specified the
profiles are determined from the input image.  If the list is
shorter than the input list then the last defined profile image is
used.  If there are no apertures defined for a profile image then the
input image apertures are used.  If there are apertures defined there
must be a match for all input apertures based on the aperture numbers.
.le

.ls recenter = yes
Recenter the reference apertures, if specified, in the input image?
.le
.ls find = yes
Find the apertures automatically?  In order for apertures to be found
automatically there must be no apertures for the input image or reference
image defined in the database and the parameter \fIapfind.nfind\fR must
be greater than zero.
.le
.ls trace = yes
Trace the apertures?  The tracing parameters from \fBaptrace\fR are used.
.le
.ls extract = yes
Extract the one dimensional aperture sums?
.le
.ls skyextract = no
Output sky spectra if background subtracting?
.le
.ls background = "none"
Type of background subtraction.  The choices are "none" for no background
subtraction, "average" to average the background within the background
regions, or "fit" to fit across the dispersion using the background
within the background regions.  Note that the "average" option does
not do any medianing or bad pixel checking; it is faster than fitting
however.  Background subtraction also requires that the background fitting
parameters are defined.  For the "average" option only the background
sample regions parameter is used.
.le
.ls clean = no
Detect and replace deviant pixels?
.le

.ls interactive = yes
Run this task interactively?  If the task is not run interactively then
all user queries are suppressed and interactive aperture editing, trace
fitting, and sum extraction reviews are disabled.  When run interactively
queries may be suppressed by responding with "NO" or "YES".
.le
.ls edit = yes
Edit the apertures?  The \fIinteractive\fR parameter must also be yes.
.le
.ls review = yes
Review the extracted spectra?  The \fIinteractive\fR parameter must also be
yes.
.le

.ls weights = "profile"
Type of extraction weighting (see equation 1).  The choices are:
.ls "profile"
The extraction is weighted by a normalized reference profile.  This is
equivalent to directly summing the pixel intensities.
.le
.ls "variance"
The extraction is weighted by the variance formula:

	W = P**2 / V;  V = v0 + v1 * max (0, I)

where P is the normalized reference profile, V is the variance at intensity I,
and I is the pixel intensity.
.le
.le
.ls naverage = 1000
Number of input image or profile image profiles to average in determining
the reference profiles.  The reference profiles are used when cleaning
and/or with variance weighted extraction.
.le
.ls nclean = 2
Number of pixels to clean per aperture per dispersion point.
.le
.ls lsigma = 3., usigma = 3.
Lower and upper rejection thresholds for cleaning.
.le
.ls interpolator = "spline3"
Image interpolation type used to align spectrum profiles to correct for
shifts in their positions.  The available interpolator types are:
"nearest", "linear", "poly3", "poly5", and "spline3".
.le
.ls v0 = 1., v1 = 0.
Variance intercept and slope for variance weighting.
.le
.ih
ADDITIONAL PARAMETERS
I/O parameters are taken from the task \fBapio\fR, the default aperture
parameters are taken from the task \fBapdefault\fR, parameters used
when finding apertures are taken from \fBapfind\fR, editing and
center parameters are taken from \fBapedit\fR, and tracing parameters
are taken from \fBaptrace\fR.
.ih
DESCRIPTION
For each image in the input image list the spectra defined by a set of
apertures are extracted by summing the pixels within the aperture at
each point along the dispersion axis.  The extractions are recorded
either as one dimensional images (\fIapio.format\fR=onedspec) or a a
two dimensional image (\fIapio.format\fR=echelle).  Other options allow
defining apertures using a reference image, defining apertures through
an automatic finding algorithm (see \fBapfind\fR), interactively
editing the apertures (see \fBapedit\fR), and tracing the positions of
the spectra as a function of dispersion position (see \fBaptrace\fR).

If an aperture reference image is specified then the apertures to be
extracted are those defined for that image.  Otherwise previously
defined apertures for the input image are sought in the aperture
database.  In either case the apertures may then be edited by the
aperture editor if the interactive and edit flags are set.  Note that
if a reference image list is specified which is shorter than the number
of input images then the last reference image is used for all remaining
input images.  Thus, a single reference image may be given for all the
input images or different reference images may be given for each input
image.

Extraction apertures consist of an identification number (ID), a
center, limits relative to the center, a curve describing shifts of the
aperture center across the dispersion axis as a function of the
wavelength, and parameters for background fitting and subtraction.  The
default curve is a constant zero shift.  Other types of curves are
determined using \fBtrace\fR.  See \fBapedit\fR for a more detailed
discussion of the aperture structures.

The extraction is performed when the parameter \fIextract\fR is yes.
If the extraction is done interactively (the \fIinteractive\fR
parameter set to yes) then the user is queried whether or not to
extract from each image.  The responses are "yes", "no", "YES", or
"NO", where the the upper case queries suppress this query for the
following images.  When the extractions are done interactively and the
parameter \fIreview\fR is yes then the user is asked if the extracted
spectra are to be reviewed.  The queries may also be answered with
"yes", "no", "YES", and "NO".  If the answer is "yes" or "YES" the
extracted spectrum is graphed.  The cursor keys available during the
review are minimal, only the CURSOR MODE keys for expanding and
adjusting the graph are available and the quit key 'q'.  The user may
then change the name of the output image or skip outputing the spectrum
entirely.

If the format parameter \fIapio.format\fR = "onedspec"
the output aperture extractions are one dimensional images
with names formed from the output rootname and a numeric extension
given by the aperture number; i.e. 'root.0001'.  One root name from
the output root name list is used for each input image.  The aperture
beam number associated with each aperture is recorded in the output
image under the keyword BEAM-NUM.  The output image name format and the
BEAM-NUM entry in the image are chosen to be compatible with the
\fBonedspec\fR package.

If the format parameter \fIapio.format\fR = "echelle"
the output aperture extractions are put in  a two dimensional image
with a name formed from the output rootname and the extension ".ech".
One root name from
the output root name list is used for each input image.
Each line in the output image corresponds to one aperture.  The relation
between the line and the aperture numbers is given by the header
parameter APNUMn where n is the line and the value is the aperture
number.  This format is used with the echelle tasks.

If background fitting parameters are defined and one of the background
subtraction options is selected (either "average" or "fit")
then a background is determined and subtracted from each
dispersion line before extraction.  There are two types of background
determinations.  The "average" option uses the background sample region
as defining background apertures.  The background within these apertures
is averaged to a constant background value per pixel.  This is the same
as extracting background regions separately and subtracting this background
spectrum from the object spectrum.  The "fit" option uses all the background
fitting parameters to fit a function to the data within the background
sample region.  The fitting uses the ICFIT package and allows a choice
of functions, medians, iterative rejections, etc.  The background under
the object spectrum may be a function of positions depending on the
order of the fitting function.  Except in determining
the expected variance of a pixel the following discussion refers to the
background subtracted image data.

The sky backgrounds subtracted from the objects may also be output.
This output is selected if background subtraction is invoked and if the
parameter \fBskyextract\fR is yes.  The output sky spectra have the
same format as the output spectra but with the rootnames given in the
\fIsky\fR list.  If no rootname is given the sky image rootname is the
same as the input image with the word "sky" appended.  For example for
onedspec format, if the input image is "ech014" then the sky spectra
are "ech014sky.0001" and so forth.

The pixels in the extracted sum are weighted according to the formula

    (1)  extraction(w) = sum{W(s,w)*I(s,w)/P(s,w)} / sum{W(s,w)}

where I is the (background subtracted) pixel value, P is a normalized
reference profile across the aperture, W is the weight assigned to the
pixel, and (s,w) are pixel coordinates along the aperture and
wavelength axis.  The sum is determined by fitting an interpolation
function and integrating this function within the aperture.  This avoids
systematic effects which occur with partial pixels at the edges of the
aperture.  Deviant pixels may be removed from
the image data by comparison to the reference profile.

There are two choices for the weights:

.nf
	profile:  W(s,w) = P(s,w)
	variance: W(s,w) = P(s,w)**2 / V(s,w)
.fi

where V(s,w) is the variance expected for pixel (s,w).

The first case weights the pixels by the reference profile.  Since the
weights cancel this type of extraction is equivalent to directly
summing the pixels.  This is the way this type of extraction is
implemented and, since the reference profile does not need
to be determined (unless cleaning is selected) , it is computationally
the fastest.

The second case includes a correction for the difference in the
variance of the pixels; in this case an analytic function of the pixel
intensity:

.nf
	V(s,w) = v0 + v1 * max (0, I(s,w))	if v0 > 0
	V(s,w) = v1 * max (1, I(s,w))		if v0 = 0
.fi
	
(see the section \fBVARIANCE MODEL\fR for additional discussion).  If
the variance estimates are close to the true variance then "variance"
weighting is statistically optimal (see the section \fBOPTIMAL
EXTRACTION\fR for additional discussion).

The normalized reference profiles, P(s,w), are determined from the
input image or from a profile reference image.  The profile reference
image is assumed to have the same profile shape but usually with a much
higher signal and/or previously smoothed.  Whether using the input
image or a profile reference image, a number of dispersion points
(specified by the parameter \fInaverage\fR) may be averaged after
shifting to a common center and then normalized.  If the averaging
number is larger than the number of image lines or columns then an
average profile over the entire spectrum is used otherwise it is a
moving average.  For the profile reference image the moving average is
centered on the dispersion point being extracted (except at the ends of
the image) while for the input image the profiles trailing the
dispersion point are used (except at the beginning of the image).  Note
that if \fInaverage = 1\fR then only one input or profile image profile
is used.  This is used when a very good profile reference image is
available.

Ideally the pixels extracted at any point along the dispersion should
be perpendicular to the dispersion.  However, this is difficult and
time consuming and tasks for rotating images, \fBrotate\fR, or mapping
and removing two dimensional geometric distortions, the \fBlongslit\fR
package, may be used to align the dispersion axis with the image lines
or columns.  The effect of using this task on spectra with a tilt of
the dispersion axis relative to the image pixel axis is to
convolve the spectrum with a broadening function.  What happens is that
the pixels at one edge of the extraction aperture will be at a slightly
different wavelength than those at the other end of the aperture.
Note that for echelle spectra it is the case that pixels of constant
wavelength are not perpendicular to the dispersion.  The proper way
to align echelle spectra is to align the emission or absorption lines
with the image lines or columns rather than align the orders.

Deviant or bad pixels are detected and replaced with the \fIclean\fR
option.  The refererence profile is scaled to the image data using
least squares fitting when the weighting is "profile" and chi square
fitting when the weighting is "variance".  The sigma of the residuals
for all the apertures in the dispersion line is determined and pixels
deviating by more than the specified number of sigma above and below
zero are rejected.  The image profiles are refit excluding the rejected
points.  The steps of finding the sigma, rejecting deviant points, and
refitting the image profiles are repeated until no further points are
rejected or the specified number of points per aperture (\fInclean\fR)
have been rejected.  The rejected points are replaced by the fitted
reference profile> The cleaned image profile is used to update the
reference profile when the reference profile is based on a trailing
moving average of the input image spectra.  In this way the
contribution of bad pixels to the reference profiles are minimized.
.ih
VARIANCE MODEL
The image pixel variance is modeled rather than computed.  The model
is given by

.nf
	V = v0 + v1 * max (0, I + B)	if v0 > 0
	V = v1 * max (1, I + B)		if v0 = 0
.fi

where B is the background determined for a given pixel and the max
function requires the intensity to be positive.
This is a physically reasonable model since it is corresponds to Poisson
photon statistics plus a constant base variance.  Specifically for
CCD detectors

	V = Vro + (I + B) / N

where Vro is the read-out variance in digital units and N
is the number of input photons per digital unit.  Thus,

.nf
	v0 = Vro
	v1 = 1 / N.
.fi

Note that v0 and v1 must be in the same units as the image pixel intensities.
Also if a background subtracted externally to this task then v0 refers to the
variance at the new zero level.
.ih
OPTIMAL EXTRACTION
Optimal extraction consists of weighting the pixels in the extraction sum
at each point along the dispersion by factors relative to their uncertainty.  
Specifically at a particular wavelength:

(1)	optimal extraction = sum{W * I / P} / sum{W}

where the sum is over the pixels within the extraction aperture and P is the
normalized reference profile.  It can be shown that the statistically optimal
weights are

(2)	W = P**2 / V

where V is the variance of the pixel and the notation **2 indicates the
square of the quantity.  Substituting in (1) yields

(3)	optimal extraction = sum{I*P/V} / sum{P*P/V}

Now consider generating a model profile by scaling the reference profile
to fit the image data at each point along the dispersion.  The statistically
correct way to determine the scale factor is using chi squared:

(4)	M = P * (sum{I*P/V} / sum{P*P/V}).

Summing (4) over the aperture and using the fact that sum{P} = 1 we find
from (3)

(5)	optimal extraction = sum{M}

Thus, the extraction of a model profile obtained by fitting the average
profile to the image at each point along the dispersion according to
(4) is equivalent to the optimal extraction (3).
.ih
TIMING
The timing varies depending on the dispersion axis, the cleaning and
extraction options, the number of spectra, and networking
requirements.  The most important determinant is the orientation of the
spectra.  If DISPAXIS = 1 the times may be considerably slower if the
image is very large (>800x800) and the amount of computer memory is
limited (<8Mbytes).  Note that except for large images the orientation
should not affect the times.  The cleaning, variance weighting, and a
reference profile image take more time and require more memory and it is
possible that paging may become a problem.
.ih
EXAMPLES
1.  To simply extract the spectra from a multislit observation:

	cl> apssum multislit1

The positions of the slits are defined using either automatic finding or
with the aperture editor.  The positions of the slits are traced if
necessary and then the apertures are extracted in to the images
"multspec.0001", "multispec.0002", etc.  The steps of defining the
slit positions and tracing can be done as part of this command or
previously using the other tasks in the \fBapextract\fR package.

2.  To use a flat field reference image to define the spectra and
the spectral profiles and then use these profiles to clean and fit
to the input spectra:

	cl> apstrip fiber1 ref=flat prof=flat clean+ fit+

.ih
SEE ALSO
apio, apfind, apedit, aptrace
.endhelp
