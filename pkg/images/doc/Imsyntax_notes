.help images Aug84 "Image Parameter Syntax"
.fi
.ce
Proposal for IMAGES Parameter Syntax

.nh
Image Templates

     The primary difficulty with image templates is the ambiguity in
the special characters '[]'.  To resolve this I propose that any task
intending to use image templates have an additional boolean parameter
called \fIsections\fR.  If this parameter is yes then the characters
'[]' will be interpreted as image sections and, thus, image sections
may be used in templates.  If the parameter is no then image sections
are not allowed and the characters '[]' have their pattern matching
meaning.  The following examples illustrate the syntax:

.nf
sections  template		expansion
  yes     images[*,*]		images[*,*]
  yes	  im*es?[1:10,3]	images1[1:10,3], images2[1:10,3], etc
  yes	  im1[1,*],im2[1,*]	im1[1,*], im2[1,*]
  yes	  in?[1,*],out*[2,*]	in1[1,*], ina[1,*], outa[2,*], outside[2,*]
  no	  images*		image1, image2, etc
  no	  images[1-3]		image1, image2, image3
.fi

     Interface support will be similar to the file name template routines
with the addition of the sections parameter to the template open routine.
Another option is to modify the file name template routines to use the
section parameter which may be directly set to NO for purely template
expansion tasks.

.nh
Binary Operations

     The following proposal is made for tasks which map an input image
to an output image.

.ls o
The parameter names are \fIimages\fR and \fIextension\fR.
The output image name(s) is formed by appending the \fIextension\fR
to the input image name.
.le
.ls o
If \fIextension\fR is null, i.e the input and output image names
are the same, then the operations are done "in place".
This may be either modifying the image or creating a temporary file
which is then allowed to replace the input image.
.le
.endhelp
