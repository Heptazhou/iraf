.help GEO Nov84 Images Package
.ce
Specifications for the Geometric Transformation Operators
.ce
Lindsey Davis
.ce
December 1984

.sh
1. Introduction

A set of operators are required to perform geometric transformations on
IRAF images. These operators change the spatial relationships between
objects in an image and are necessary for a variety of problems
including geometric calibration, geometric distortion removal and image
registration.  The general form of the geometric operator is listed below.

.nf
    Iout(x[i],y[j]) = Iin(a(x[i],y[j]),b(x[i],y[j]))
.fi

Iout(x[i],y[j]) and Iin(x[i],y[j]) are the output and input images
respectively and a(x,y)
and b(x,y) are the functions which map the output pixels into the input
image. The geometric tranformation operator must perform the following steps.

.ls [1]
Derive the spatial transformation.
.le
.ls [2]
Apply the spatial transformation to the output pixels.
.le
.ls [3]
Interpolate in the input image to find the gray levels of the output image.
.le
.ls[4]
Optionally preserve the total flux of the input image. 
.le

.sh
2. Requirements

The geometric tranformation routines must perform the following
functions.

.ls [1]
Given the coordinates of a set of grid points in the input image
and the corresponding coordinates
of the same grid points in the reference image, compute an analytic surface
which represents the coordinate transformation, while preserving the
continuity of curvilinear features and the connectivity of objects in
the image. This operator must be able to calculate a linear transformation.
.le

.ls[2]
Perform a general geometric transformation on an image where the transformation
has been defined by [1].  The gray level values of the output image shall
be determined by 2-D interpolation in the input image (pixel filling
algorithm), with the choice of interpolant left to the user.
.le

.ls[3]
Perform a general linear transformation on an image, a fractional pixel
shift in x-y, rotation about an arbitrary center, and scaling
in x and y, using the results
of [1] or user supplied parameters. The gray level values of the output
image shall be determined by 2D interpolation in the input image.
.le

.ls[4]
All operatations which involve out of bounds pixels shall offer the
following options for out of bounds pixel references. These options
shall be handled automatically by the imio routines.
.ls o
Add pixel to bad pixel list.
.le
.ls o
Return the value of the nearest boundary pixel.
.le
.ls o
Return a constant.
.le
.ls o
Generate a value by reflection around the boundary.
.le
.ls o
Generate a value by projection about the boundary.
.le
.ls o
Generate a value by wrapping around to the opposite side of the image.
.le
.ls o
Apodize.
.le
.le

.ls[5]
Operations which change the spatial scale of the data shall by default
scale the value of the output pixels so as to conserve the total intensity.
The output pixel values will be multiplied by the Jacobian of the
coordinate transformations.
.le

.ls[6]
Image interpolation operations shall offer the following choice of 
interpolators.
.ls o
Nearest neighbour.
.le
.ls o
Bilinear interpolation.
.le
.ls o
Bicubic interior polynomial.
.le
.ls o
Biquintic interior polynomial.
.le
.ls o
Bicubic spline.
.le
.le

.sh
3. Specifications

.sh
3.1 List of Routines

The following tasks shall be part of the geometric corrections package.

.nf
       geomap -- calculate the spatial transformation function
      imshift -- shift an image in x and y
       rotate -- rotate and shift an image
    imlintran -- linearly transform an image
      distran -- correct an image for geometric distortion
      geotran -- geometrically transform an image
.fi

.sh
3.2 Algorithms

.sh
3.2.1. Spatial Transformations

.sh
3.2.1.1. Linear Spatial Transformation

The form of the linear transformation is the following.

.nf
	xin = A * xref + B * yref + C
	yin = D * xref + E * yref + F
.fi

The output pixels (xref, yref) are mapped into the input image coordinates
(xin, yin). The coefficients of the surface A, B, C, D, E and F can be
interpreted in terms of simple geometry.

.sh 
3.2.1.2. Higher Order Spatial Transformation

Given a list of the coordinates of the control points in the reference and
input frames,
the coordinate transformation between systems frames can be approximated by a
polynomial surface in x and y. The method of polynomial warp
transformations is outlined below.

.nf
1. the transformation

xin[k] = a(xref[k], yref[k])	k = 1,...,M
yin[k] = b(xref[k], yref[k])	k = 1,...,M

2. the polynomial basis functions

b[i,j] = xref ** i * yref ** j		i = 0,...,N j = 0,...,N

3. the normal equations

xin[k] = sum (sum (k[i,j](xref) * b[i,j]) j = 0,...,N) i = 0,...,N)  k = 1,...,M
yin[k] = sum (sum (k[i,j](yref) * b[i,j]) j = 0,...,N) i = 0,...,N)  k = 1,...,M 
B[k] (xref[k],yref[k]) ** T =
    (b[i,0](xref[k],yref[k]),...,b[i,N](xref[k], yref[k])) 

K (xref) ** T = (k[i,0](xref), k[i,1](xref),...k[i,N](xref))  i = 1,...,N 
K (yref) ** T = (k[i,0](yref), k[i,1](yref),...k[i,N](yref))  i = 1,...,N

K (xref) = (B ** T * B) ** -1 * B ** T * xin
K (yref) = (B ** T * B) ** -1 * B ** T * yin

M >= (N + 1) ** 2
.fi

Xin and yin are the transformed output image coordinates and a and b are the
two transformation functions. N is the order of the polynomial in x and y
and M is the number of data points.
The b[i,j] are the polynomial basis functions and the k[i,j] are
the coefficients of terms x ** i * y ** j. The corresponding B and K vectors
are 1-dimensional vector representations of the same quantities. Note that
the K vectors are different for the x and y coordinates but that the B matrix
remains the same. The surface fit is performed in the least squares sense
and requires that M >= (N + 1) ** 2 for a unique solution. The surface fits
can easily be performed with the curfit routines modified to accept
two independent variables data.

.sh
3.2.2. Image Interpolation

The gray levels of the output image are calculated by interpolating in the
input image at the positions of the transformed output pixels.
The interpolant must be two dimensional. The choice of interpolant
should be left to the discretion of the user. The details of the two dimensional
image interpolation are described in the specifications for the two-D
image interpolator.

.sh
3.2.3. Flux Preservation

Flux preservation is obtained by multiplying the output pixel values by
the Jacobian of the transformation.
The Jacobian J represents the ratio of an
element of surface area in the (xin,yin) plane to that in the (xref,yref) plane,
and can be represented as follows.

.nf
    J = dxin / dxref * dyin / dyref - dyin / dxref * dxin / dyref
.fi

.sh
3.2.4. Representation of the Distortion Transformation

GEOMAP calculates the coefficients of the analytic surface which maps the
output image coordinate  system into the input image coordinate system.
The coefficients
of the fitted surface will be stored and passed to GEOTRAN.

.sh
4. Detailed Design

.sh
5. References
.endhelp
