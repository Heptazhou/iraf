



define	ARB		999999999
define	ERR		-1
define	EOF		-2
define	BOF		-3
define	EOT		-4
define	BOFL		BOF
define	EOFL		EOF
define	EOS		0
define	NO		0
define	YES		1
define	OK		0
define	NULL		0


define	READ_ONLY	1		
define	READ_WRITE	2
define	WRITE_ONLY	3
define	APPEND		4
define	NEW_FILE	5
define	TEMP_FILE	6
define	NEW_COPY	7
define	NEW_IMAGE	5		
define	NEW_STRUCT	5
define	NEW_TAPE	5
define	TEXT_FILE	11		
define	BINARY_FILE	12
define	DIRECTORY_FILE	13
define	STATIC_FILE	14
define	SYMLINK_FILE	15
define	SPOOL_FILE	(-2)
define	RANDOM		1		
define	SEQUENTIAL	2
define	CLIN		1		
define	CLOUT		2		
define	STDIN		3		
define	STDOUT		4
define	STDERR		5
define	STDGRAPH	6
define	STDIMAGE	7
define	STDPLOT		8



define	SZ_BOOL		2		
define	SZ_CHAR		1
define	SZ_SHORT	1
define	SZ_INT		2
define	SZ_LONG		2
define	SZ_REAL		2
define	SZ_DOUBLE	4
define	SZ_COMPLEX	4
define	SZ_POINTER	2
define	SZ_STRUCT	2
define	SZ_USHORT	1
define	SZ_FNAME	255		
define	SZ_PATHNAME	511		
define	SZ_LINE		1023		
define	SZ_COMMAND	2047		

define  SZ_MII_SHORT    1		
define  SZ_MII_LONG     2
define  SZ_MII_REAL     2
define  SZ_MII_DOUBLE   4
define  SZ_MII_INT      SZ_MII_LONG

define	SZ_INT32	2		
define	SZ_LONG32	2
define	SZ_STRUCT32	2

define	TY_BOOL		1		
define	TY_CHAR		2
define	TY_SHORT	3
define	TY_INT		4
define	TY_LONG		5
define	TY_REAL		6
define	TY_DOUBLE	7
define	TY_COMPLEX	8
define	TY_POINTER	9
define	TY_STRUCT	10		
define	TY_USHORT	11		
define	TY_UBYTE	12		


define	INDEFS		(-32767)
define	INDEFL		(-2147483647)
define	INDEFI		INDEFL
define	INDEFR		1.6e38
define	INDEFD		1.6d308
define	INDEFX		(INDEF,INDEF)
define	INDEF		INDEFR

define	IS_INDEFS	(($1)==INDEFS)
define	IS_INDEFL	(($1)==INDEFL)
define	IS_INDEFI	(($1)==INDEFI)
define	IS_INDEFR	(($1)==INDEFR)
define	IS_INDEFD	(($1)==INDEFD)
define	IS_INDEFX	(real($1)==INDEFR)
define	IS_INDEF	(($1)==INDEFR)


define	P2C	((($1)-1)*2+1)
define	P2S	((($1)-1)*2+1)
define	P2I	($1)
define	P2L	($1)
define	P2R	($1)
define	P2D	((($1)-1)/2+1)
define	P2X	((($1)-1)/2+1)

define	P2P	($1)			












define	access	xfaccs
define	calloc	xcallc
define	close	xfcloe
define	delete	xfdele
define	error	xerror
define	flush	xffluh
define	getc	xfgetc
define	getchar	xfgetr
define	malloc	xmallc
define	mfree	xmfree
define	mktemp	xmktep
define	note	xfnote
define	open	xfopen
define	poll	xfpoll
define	printf	xprinf
define	putc	xfputc
define	putchar	xfputr
define	qsort	xqsort
define	read	xfread
define	realloc	xrealc
define	seek	xfseek
define	sizeof	xsizef
define	strcat	xstrct
define	strcmp	xstrcp
define	strcpy	xstrcy
define	strlen	xstrln
define	ungetc	xfungc
define	write	xfwrie
define  fatal   xfatal
define  fchdir  xfchdr
define  fscan   xfscan
define  getopt  xgtopt
define  getpid  xgtpid
define  getuid  xgtuid
define  rename  xfrnam
define  reset   xreset
define  scan    xxscan



define	MAX_WCS		16			
define	LEN_PLBUF	2048			
define	MAX_SZMARKER	4			
define	POLYLINE	1			
define	POLYMARKER	2
define	FILLAREA	3
define	POINTMODE	4			
define	LINEAR		0			
define	LOG		1
define	ELOG		2
define	DEF_CHARHEIGHT	0.0286			
define	DEF_CHARWIDTH	0.0125			



define	KSHIFT		10000
define	DATA		0
define	XMIT		1
define	XFER		2
define	PSIO		3
define	OSCMD		4





define	UNSET		0		
define	MODIFIED	1		
define	FIXED		2		



define	GF_CLOSEFD	1		
define	GF_WSOPEN	2		
define	GF_WSACTIVE	4		






define	LEN_GDES	600
define	LEN_WCS		12
define	LEN_WCSARRAY	(LEN_WCS*MAX_WCS)
define	SZ_DEVNAME	29
define	SZ_UIFNAME	199
define	SZ_TICKFORMAT	9

define	GP_FD		Memi($1)		
define	GP_TTY		Memi($1+1)		
define	GP_GFLAGS	Memi($1+2)		
define	GP_ACMODE	Memi($1+3)		
define	GP_WCS		Memi($1+4)		
define	GP_WCSSTATE	Memi($1+5)		
define	GP_WCSORD	Memi($1+6)		
define	GP_CURSOR	Memi($1+7)		
define	GP_DEVASPECT	Memr(P2R($1+8))
		
define	GP_SZMARKER	Memr(P2R($1+9+$2-1))
	
			
define	GP_PLAP		($1+20)			
define	GP_PMAP		($1+24)			
define	GP_FAAP		($1+28)			
define	GP_TXAP		($1+31)			
define	GP_TXAPCUR	($1+41)			
define	GP_DRAWTITLE	Memi($1+55)		
define	GP_TITLESIZE	Memr(P2R($1+56))
	
define	GP_TITLECOLOR	Memi($1+57)		
define	GP_TITLEJUST	Memi($1+58)		
define	GP_NTITLELINES	Memi($1+59)		
define	GP_FRAMECOLOR	Memi($1+60)		
define	GP_FRAMEDRAWN	Memi($1+61)		
define	GP_ASPECT	Memr(P2R($1+62))
	
define	GP_XAP		($1+65)			
define	GP_YAP		($1+100)		
define	GP_DEVNAME	Memc(P2C($1+135))	
define	GP_UIFNAME	Memc(P2C($1+165))	
define	GP_WCSPTR	(($2)*LEN_WCS+($1)+367)	
 			
 			



define	LEN_PL		4
define	PL_STATE	Memi($1)		
define	PL_LTYPE	Memi($1+1)
define	PL_WIDTH	Memr(P2R($1+2))

define	PL_COLOR	Memi($1+3)

define	LEN_PM		4
define	PM_STATE	Memi($1)		
define	PM_LTYPE	Memi($1+1)
define	PM_WIDTH	Memr(P2R($1+2))

define	PM_COLOR	Memi($1+3)

define	LEN_FA		3
define	FA_STATE	Memi($1)		
define	FA_STYLE	Memi($1+1)
define	FA_COLOR	Memi($1+2)

define	LEN_TX		10
define	TX_STATE	Memi($1)		
define	TX_UP		Memi($1+1)
define	TX_SIZE	Memr(P2R($1+2))

define	TX_PATH		Memi($1+3)
define	TX_SPACING	Memr(P2R($1+4))

define	TX_HJUSTIFY	Memi($1+5)
define	TX_VJUSTIFY	Memi($1+6)
define	TX_FONT		Memi($1+7)
define	TX_QUALITY	Memi($1+8)
define	TX_COLOR	Memi($1+9)



define	LEN_GL		33
define	GL_DRAWAXES	Memi($1)		
define	GL_SETAXISPOS	Memi($1+1)		
define	GL_AXISPOS1	Memr(P2R($1+2))
		
define	GL_AXISPOS2	Memr(P2R($1+3))
		
define	GL_DRAWGRID	Memi($1+4)		
define	GL_GRIDCOLOR	Memi($1+5)		
define	GL_ROUND	Memi($1+6)		
define	GL_LABELAXIS	Memi($1+7)		
define	GL_AXISLABELSIZE	Memr(P2R($1+8))
	
define	GL_AXISLABELCOLOR Memi($1+9)		
define	GL_DRAWTICKS	Memi($1+10)		
define	GL_LABELTICKS	Memi($1+11)		
define	GL_NMAJOR	Memi($1+12)		
define	GL_NMINOR	Memi($1+13)		
define	GL_MAJORLENGTH	Memr(P2R($1+14))
	
define	GL_MINORLENGTH	Memr(P2R($1+15))
	
define	GL_MAJORWIDTH	Memr(P2R($1+16))
	
define	GL_MINORWIDTH	Memr(P2R($1+17))
	
define	GL_AXISWIDTH	Memr(P2R($1+18))
	
define	GL_AXISCOLOR	Memi($1+19)		
define	GL_TICKLABELSIZE	Memr(P2R($1+20))
	
define	GL_TICKLABELCOLOR Memi($1+21)		
define	GL_TICKCOLOR	Memi($1+22)		
define	GL_TICKFORMAT	Memc(P2C($1+23))	


define	WCS_WX1	Memr(P2R($1))
		
define	WCS_WX2	Memr(P2R($1+1))

define	WCS_WY1	Memr(P2R($1+2))

define	WCS_WY2	Memr(P2R($1+3))

define	WCS_SX1	Memr(P2R($1+4))
		
define	WCS_SX2	Memr(P2R($1+5))

define	WCS_SY1	Memr(P2R($1+6))

define	WCS_SY2	Memr(P2R($1+7))

define	WCS_XTRAN	Memi($1+8)		
define	WCS_YTRAN	Memi($1+9)
define	WCS_FLAGS	Memi($1+10)		
define	WCS_CLIP	WCS_FLAGS		


define	WF_DEFINED	1			
define	WF_CLIP		2			
define	WF_NEWFORMAT	4			
	
define	WF_RASTER	(and(($1)/512,511))	
define	WF_SETRASTER	(or(($1),($2)*512))	

#!# 0



define	FOO	Memr(Memi($1+12))
#!# 4
	

define	BAR	Memr($1)
#!# 7

define	BAR1	Memr($1+1)
#!# 9

define	BAR2	Memr(TEST($1))
#!# 11


define	FOOBAR	Memr($1)
#!# 14



x$subr hello ()
x$pntr	xs
x$pntr	xe


define	XS	Memr(xs+($1)-1)
#!# 20

define	XE	Memr(xe+($1)-1)
#!# 22


x$short	ST0001(19)
save
x$int	iyy
data	(ST0001(iyy),iyy= 1, 8)	/104,101,108,108,111, 44, 32,119/
data	(ST0001(iyy),iyy= 9,16)	/111,114,108,100, 58, 32, 32, 37/
data	(ST0001(iyy),iyy=17,19)	/100, 10, 0/
begin
#!# 25

	call printf (ST0001, FOO(1))
end
#!# 27


