      SUBROUTINE BRKNXT (SP, LEXTYP, LABVAL, TOKEN)
      INTEGER LABVAL (100), LEXTYP (100), SP, TOKEN
      INTEGER I, N
      INTEGER ALLDIG, CTOI
      INTEGER T, PTOKEN (100)
      INTEGER GNBTOK
      COMMON /CDEFIO/ BP, BUF (4096)
      INTEGER BP
      INTEGER BUF
      COMMON /CFNAME/ FCNAME (30)
      INTEGER FCNAME
      COMMON /CFOR/ FORDEP, FORSTK (200)
      INTEGER FORDEP
      INTEGER FORSTK
      COMMON /CGOTO/ XFER
      INTEGER XFER
      COMMON /CLABEL/ LABEL, RETLAB, MEMFLG, COL, LOGIC0
      INTEGER LABEL
      INTEGER RETLAB
      INTEGER MEMFLG
      INTEGER COL
      INTEGER LOGIC0
      COMMON /CLINE/ LEVEL, LINECT (5), INFILE (5), FNAMP, FNAMES ( 150)
      INTEGER LEVEL
      INTEGER LINECT
      INTEGER INFILE
      INTEGER FNAMP
      INTEGER FNAMES
      COMMON /CMACRO/ CP, EP, EVALST (500), DEFTBL
      INTEGER CP
      INTEGER EP
      INTEGER EVALST
      INTEGER DEFTBL
      COMMON /COUTLN/ OUTP, OUTBUF (74)
      INTEGER OUTP
      INTEGER OUTBUF
      COMMON /CSBUF/ SBP, SBUF(2048), SMEM(240)
      INTEGER SBP
      INTEGER SBUF
      INTEGER SMEM
      COMMON /CSWTCH/ SWTOP, SWLAST, SWSTAK(1000), SWVNUM, SWVLEV, SWVST
     *K(10), SWINRG
      INTEGER SWTOP
      INTEGER SWLAST
      INTEGER SWSTAK
      INTEGER SWVNUM
      INTEGER SWVLEV
      INTEGER SWVSTK
      INTEGER SWINRG
      COMMON /CKWORD/ RKWTBL
      INTEGER RKWTBL
      COMMON /CLNAME/ FKWTBL, NAMTBL, GENTBL, ERRTBL, XPPTBL
      INTEGER FKWTBL
      INTEGER NAMTBL
      INTEGER GENTBL
      INTEGER ERRTBL
      INTEGER XPPTBL
      COMMON /ERCHEK/ ERNAME, BODY, ESP, ERRSTK(30)
      INTEGER ERNAME
      INTEGER BODY
      INTEGER ESP
      INTEGER ERRSTK
      INTEGER MEM( 60000)
      COMMON/CDSMEM/MEM
      N = 0
      T = GNBTOK (PTOKEN, 100)
      IF (.NOT.(ALLDIG (PTOKEN) .EQ. 1))GOTO 23000
      I = 1
      N = CTOI (PTOKEN, I) - 1
      GOTO 23001
23000 CONTINUE
      IF (.NOT.(T .NE. 59))GOTO 23002
      CALL PBSTR (PTOKEN)
23002 CONTINUE
23001 CONTINUE
      I = SP
23004 IF (.NOT.(I .GT. 0))GOTO 23006
      IF (.NOT.(LEXTYP (I) .EQ. -95 .OR. LEXTYP (I) .EQ. -96 .OR. LEXTYP
     * (I) .EQ. -94 .OR. LEXTYP (I) .EQ. -93))GOTO 23007
      IF (.NOT.(N .GT. 0))GOTO 23009
      N = N - 1
      GOTO 23005
23009 CONTINUE
      IF (.NOT.(TOKEN .EQ. -79))GOTO 23011
      CALL OUTGO (LABVAL (I) + 1)
      GOTO 23012
23011 CONTINUE
      CALL OUTGO (LABVAL (I))
23012 CONTINUE
23010 CONTINUE
      XFER = 1
      RETURN
23007 CONTINUE
23005 I = I - 1
      GOTO 23004
23006 CONTINUE
      IF (.NOT.(TOKEN .EQ. -79))GOTO 23013
      CALL SYNERR (14Hillegal break.)
      GOTO 23014
23013 CONTINUE
      CALL SYNERR (13Hillegal next.)
23014 CONTINUE
      RETURN
      END
C     LOGIC0  LOGICAL_COLUMN
