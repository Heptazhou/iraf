      SUBROUTINE OUTCH (C)
      INTEGER C, SPLBUF(8+1)
      INTEGER I, IP, OP, INDEX
      COMMON /CDEFIO/ BP, BUF (4096)
      INTEGER BP
      INTEGER BUF
      COMMON /CFNAME/ FCNAME (30)
      INTEGER FCNAME
      COMMON /CFOR/ FORDEP, FORSTK (200)
      INTEGER FORDEP
      INTEGER FORSTK
      COMMON /CGOTO/ XFER
      INTEGER XFER
      COMMON /CLABEL/ LABEL, RETLAB, MEMFLG, COL, LOGIC0
      INTEGER LABEL
      INTEGER RETLAB
      INTEGER MEMFLG
      INTEGER COL
      INTEGER LOGIC0
      COMMON /CLINE/ LEVEL, LINECT (5), INFILE (5), FNAMP, FNAMES ( 150)
      INTEGER LEVEL
      INTEGER LINECT
      INTEGER INFILE
      INTEGER FNAMP
      INTEGER FNAMES
      COMMON /CMACRO/ CP, EP, EVALST (500), DEFTBL
      INTEGER CP
      INTEGER EP
      INTEGER EVALST
      INTEGER DEFTBL
      COMMON /COUTLN/ OUTP, OUTBUF (74)
      INTEGER OUTP
      INTEGER OUTBUF
      COMMON /CSBUF/ SBP, SBUF(2048), SMEM(240)
      INTEGER SBP
      INTEGER SBUF
      INTEGER SMEM
      COMMON /CSWTCH/ SWTOP, SWLAST, SWSTAK(1000), SWVNUM, SWVLEV, SWVST
     *K(10), SWINRG
      INTEGER SWTOP
      INTEGER SWLAST
      INTEGER SWSTAK
      INTEGER SWVNUM
      INTEGER SWVLEV
      INTEGER SWVSTK
      INTEGER SWINRG
      COMMON /CKWORD/ RKWTBL
      INTEGER RKWTBL
      COMMON /CLNAME/ FKWTBL, NAMTBL, GENTBL, ERRTBL, XPPTBL
      INTEGER FKWTBL
      INTEGER NAMTBL
      INTEGER GENTBL
      INTEGER ERRTBL
      INTEGER XPPTBL
      COMMON /ERCHEK/ ERNAME, BODY, ESP, ERRSTK(30)
      INTEGER ERNAME
      INTEGER BODY
      INTEGER ESP
      INTEGER ERRSTK
      INTEGER MEM( 60000)
      COMMON/CDSMEM/MEM
      EXTERNAL INDEX
      INTEGER BREAK0(10)
      DATA BREAK0(1)/32/,BREAK0(2)/41/,BREAK0(3)/44/,BREAK0(4)/46/,BREAK
     *0(5)/43/,BREAK0(6)/45/,BREAK0(7)/42/,BREAK0(8)/47/,BREAK0(9)/40/,B
     *REAK0(10)/-2/
      IF (.NOT.(OUTP .GE. 72))GOTO 23000
      IF (.NOT.(INDEX (BREAK0, C) .GT. 0))GOTO 23002
      IP = OUTP
      GOTO 23003
23002 CONTINUE
      IP=OUTP
23004 IF (.NOT.(IP .GE. 1))GOTO 23006
      IF (.NOT.(INDEX (BREAK0, OUTBUF(IP)) .GT. 0))GOTO 23007
      GOTO 23006
23007 CONTINUE
23005 IP=IP-1
      GOTO 23004
23006 CONTINUE
23003 CONTINUE
      IF (.NOT.(IP .NE. OUTP .AND. (OUTP-IP) .LT. 8))GOTO 23009
      OP = 1
      I=IP+1
23011 IF (.NOT.(I .LE. OUTP))GOTO 23013
      SPLBUF(OP) = OUTBUF(I)
      OP = OP + 1
23012 I=I+1
      GOTO 23011
23013 CONTINUE
      SPLBUF(OP) = -2
      OUTP = IP
      GOTO 23010
23009 CONTINUE
      SPLBUF(1) = -2
23010 CONTINUE
      CALL OUTDON
      OP=1
23014 IF (.NOT.(OP .LT. COL))GOTO 23016
      OUTBUF(OP) = 32
23015 OP=OP+1
      GOTO 23014
23016 CONTINUE
      OUTBUF(6) = 42
      OUTP = COL
      IP=1
23017 IF (.NOT.(SPLBUF(IP) .NE. -2))GOTO 23019
      OUTP = OUTP + 1
      OUTBUF(OUTP) = SPLBUF(IP)
23018 IP=IP+1
      GOTO 23017
23019 CONTINUE
23000 CONTINUE
      OUTP = OUTP + 1
      OUTBUF(OUTP) = C
      END
C     LOGIC0  LOGICAL_COLUMN
C     BREAK0  BREAK_CHARS
